{"mappings":"AAGe,sBCmCNA,EAAQC,GACdC,KAAAC,QAAAC,SAAAC,cAAAL,GAEAE,KAAKD,QAAIA,EACRC,KAAKI,WAAYL,EAAQK,WACzBJ,MAAAK,IACAL,MAAKM,IAEND,KAED,MAAYE,YAASA,EAAAC,KAAAA,GAAAR,KAAAD,QACnBC,KAAKC,QAAEQ,UAAKC,IAAG,UACfV,KAAAC,QAAYU,UAlDC,EAAIH,EAAO,GAAID,EAAaH,KAC3C,IAAIQ,EAAOL,GAAgB,oBAE3B,MAAMM,EAAQL,EAAKM,KAAIC,IACrB,IAAIC,EAAM,GAKV,OAJGD,EAAKE,KAAOb,IACbQ,EAAOG,EAAKG,MACZF,EAAM,YAEF,mCAGPA,gCAAAD,EAAAE,OAAAF,EAAAG,4BAaU,sFAEeN,wJAKbC,EAAAM,KAAA,4BAkBCC,CAAAZ,EAAAD,EAAAP,KAAAI,mCAGHJ,KAAAqB,aAAAC,KAAAtB,eACFuB,iBAAe,QAAAvB,KAAAqB,yBACbrB,KAAGC,QAASE,cAAe,kCAC3BH,KAAAC,QAASE,cAAA,6CAENqB,KAAKA,GAAKC,EAAAC,OAAAC,mCAGvB3B,KAAA4B,SAES,MACR,IAAY,SAALJ,EACR,MAAAP,EAAAQ,EAAAC,OAAAC,QAAAV,GAEUjB,KAAI6B,OAAAZ,GACN,cACRjB,KAAA8B,SAKCC,oBACE/B,KAAKC,QAAUQ,UAAiBuB,SAAA,QAElCC,cACA,OAAKjC,KAAKD,QAAAS,KAAA0B,MAAAnB,GAAAA,EAAAE,KAAAjB,KAAAI,oBAIVa,GACDjB,KAAAI,WAAAa,EAEGjB,KAAIkB,MAAAiB,YAAAnC,KAAAiC,QAAAf,MACNlB,KAAKC,QAAQmC,iBAAoB,sBAAAC,SAAAtB,IAC7BA,EAACN,UAAM6B,OAAU,eAEtBtC,KAAAC,QAAAE,cAAA,aAAAc,OAAAR,UAAAC,IAAA,YAEDV,KAAS8B,iBAGP9B,KAAK+B,OAAM/B,KAAA8B,QAA+B9B,KAAAuC,OAG5CA,OACEvC,KAAKC,QAAQQ,UAAAC,IAAA,QACbV,KAAKwC,MAAA/B,UAAQ6B,OAAc,mBAC5BtC,KAAAwC,MAAA/B,UAAAC,IAAA,0PDjGuB,UAAW,CAEnCF,KAAM,CACJ,CAACS,GAAI,IAAKC,MAAO,SACjB,CAACD,GAAI,IAAKC,MAAO,WACjB,CAACD,GAAI,IAAKC,MAAO,OACjB,CAACD,GAAI,IAAKC,MAAO,gBACjB,CAACD,GAAI,IAAKC,MAAO,QACjB,CAACD,GAAI,IAAKC,MAAO","sources":["index.js","select/select.js"],"sourcesContent":["import { Select } from './select/select';\r\nimport './select/style.scss';\r\n\r\nconst select = new Select('#select', {\r\n  // placeholder: 'Выберите элемент',\r\n  data: [\r\n    {id: '1', value: 'React'},\r\n    {id: '2', value: 'Angular'},\r\n    {id: '3', value: 'Vue'},\r\n    {id: '4', value: 'React Native'},\r\n    {id: '5', value: 'Next'},\r\n    {id: '6', value: 'Nest'},\r\n  ]\r\n});","const getTemplate = (data = [], placeholder, selectedId) => {\r\n  let text = placeholder  ?? 'I\\'m a placeholder';\r\n\r\n  const items = data.map(item => {\r\n    let cls = '';\r\n    if(item.id === selectedId) {\r\n      text = item.value;\r\n      cls = 'selected';\r\n    }\r\n    return `\r\n      <li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>\r\n    `;\r\n  });\r\n\r\n  return `\r\n    <div class=\"select__input\" data-type=\"input\">\r\n      <span data-type=\"value\">${text}</span>\r\n      <i class=\"fa fa-chevron-down\" data-type=\"arrow\"></i>\r\n    </div>\r\n    <div class=\"select__dropdown\">\r\n      <ul class=\"select__list\">${items.join('')}</ul>\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport class Select {\r\n  constructor(selector, options) {\r\n    this.element = document.querySelector(selector);\r\n    this.options = options;\r\n    this.selectedId = options.selectedId;\r\n\r\n    this.#render();\r\n    this.#setup();\r\n  }\r\n\r\n  #render() {\r\n    const {placeholder, data} = this.options;\r\n    this.element.classList.add('select');\r\n    this.element.innerHTML = getTemplate(data, placeholder, this.selectedId);\r\n  }\r\n\r\n  #setup() {\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    document.addEventListener('click', this.clickHandler);\r\n    this.arrow = this.element.querySelector('[data-type=\"arrow\"]');\r\n    this.value = this.element.querySelector('[data-type=\"value\"]');\r\n  }\r\n\r\n  clickHandler(event) {\r\n    const {type} = event.target.dataset\r\n    switch (true) {\r\n      case type === 'input' :\r\n        this.toggle();\r\n        break;\r\n      case type === 'item' :\r\n        const id = event.target.dataset.id;\r\n        this.select(id);\r\n        break;\r\n      default : this.close();\r\n        break;\r\n    }\r\n  }\r\n\r\n  get isOpen() {\r\n    return this.element.classList.contains('open');\r\n  }\r\n\r\n  get current() {\r\n    return this.options.data.find(item => item.id === this.selectedId);\r\n  }\r\n\r\n  select(id) {\r\n    this.selectedId = id;\r\n    this.value.textContent = this.current.value;\r\n    this.element.querySelectorAll('[data-type=\"item\"]').forEach(item => {\r\n      item.classList.remove('selected');\r\n    })\r\n    this.element.querySelector(`[data-id=\"${id}\"]`).classList.add('selected');\r\n    this.close();\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen ? this.close() : this.open();\r\n  }\r\n\r\n  open() {\r\n    this.element.classList.add('open');\r\n    this.arrow.classList.remove('fa-chevron-down');\r\n    this.arrow.classList.add('fa-chevron-up');\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('open');\r\n    this.arrow.classList.remove('fa-chevron-up');\r\n    this.arrow.classList.add('fa-chevron-down');\r\n  }\r\n\r\n  destroy() {\r\n    this.element.removeEventListener('click', this.clickHandler);\r\n    this.element.innerHTML = '';\r\n  }\r\n}\r\n\r\n"],"names":["selector","options","this","element","document","querySelector","selectedId","render","setup","placeholder","data","classList","add","innerHTML","text","items","map","item","cls","id","value","join","$7aa2a578a953cf9b$var$getTemplate","clickHandler","bind","addEventListener","type","event","target","dataset","toggle","select","close","isOpen","contains","current","find","textContent","querySelectorAll","forEach","remove","open","arrow"],"version":3,"file":"index.0456d94c.js.map"}